name: "4diffusion"
tag: "${rmspace:${system.prompt_processor_multi_view.prompt},_}"
exp_root_dir: "outputs"
seed: 23

data_type: "single-multiview-combined-camera-datamodule"
data:
  prob_multi_view: 1.0
  single_view:
    batch_size: [1,1]
    # 0-4999: 64x64, >=5000: 512x512
    # this drastically reduces VRAM usage as empty space is pruned in early training
    width: [256, 256]
    height: [256, 256]
    resolution_milestones: [5000]
    camera_distance_range: [2.5, 3.0]
    fovy_range: [15, 60]
    elevation_range: [0, 30]
    camera_perturb: 0.
    center_perturb: 0.
    up_perturb: 0.
    eval_camera_distance: 1.1
    eval_fovy_deg: 45
    eval_elevation_deg: 0
    static: false
    num_frames: 8
    simultan: true
    prob_single_view_video: 1.0
    width_vid: 144
    height_vid: 80
    sample_rand_frames: t1
    num_frames_factor: 1
    eval_height: 256
    eval_width: 256
    test_traj: 'constant'

  multi_view:
    batch_size: [4,4,4] # must be dividable by n_view
    n_view: 4
    width: [64, 192, 256]
    height: [64, 192, 256]
    resolution_milestones: [5000, 10000]
    camera_distance_range: [1.1, 1.1]
    fovy_range: [45, 45]
    elevation_range: [0, 5]
    camera_perturb: 0.
    center_perturb: 0.
    up_perturb: 0.
    n_val_views: 4
    eval_camera_distance: 2.0
    eval_fovy_deg: 40.
    relative_radius: false
    num_frames: ${data.single_view.num_frames}
    sample_rand_frames: ${data.single_view.sample_rand_frames}
    eval_height: ${data.single_view.eval_height}
    eval_width: ${data.single_view.eval_width}
    stage_one: false
    stage_one_step: 0

system_type: "Fourdiffsion-system"
system:
  prob_multi_view: ${data.prob_multi_view}
  prob_single_view_video: ${data.single_view.prob_single_view_video}
  stage: coarse
  geometry_type: "implicit-volume"
  geometry:
    radius: 1.0
    normal_type: "analytic"

    density_bias: "blob_magic3d"
    density_activation: softplus
    density_blob_scale: 10.
    density_blob_std: 0.5

    pos_encoding_config:
      otype: HashGridSpatialTime
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.447269237440378 # max resolution 4096
      static: ${data.single_view.static}
      num_frames: ${data.single_view.num_frames}
    
    anneal_density_blob_std_config:
      min_anneal_step: 0
      max_anneal_step: 50000
      start_val: ${system.geometry.density_blob_std}
      end_val: 0.5

  material_type: "no-material"
  material:
    n_output_dims: 3
    color_activation: sigmoid

  background_type: "solid-color-background"
  background:
    learned: false

  renderer_type: "nerf-volume-renderer"
  renderer:
    radius: ${system.geometry.radius}
    num_samples_per_ray: 256

  prompt_processor_type_multi_view: "stable-diffusion-prompt-processor"
  prompt_processor_multi_view:
    pretrained_model_name_or_path: "stabilityai/stable-diffusion-2-1-base"
    prompt: ???
    negative_prompt: "ugly, bad anatomy, blurry, pixelated obscure, unnatural colors, poor lighting, dull, and unclear, cropped, lowres, low quality, artifacts, duplicate, morbid, mutilated, poorly drawn face, deformed, dehydrated, bad proportions"
    front_threshold: 30.
    back_threshold: 30.
    image_num: 0
  
  guidance_type_multi_view: "multiview-video-diffusion-guidance"
  guidance_multi_view:
      model_name: "sd-v2.1-base-4view"
      ckpt_path: './ckpts/sd-v2.1-base-4view-ipmv.pt' # path to a pre-downloaded checkpoint file (null for loading from URL)
      config_path: './threestudio/models/imagedream/imagedream/configs/sd_v2_base_ipmv.yaml'
      guidance_scale: 5.0
      min_step_percent: [ 0, 0.98, 0.02, 5000 ]  # (start_iter, start_val, end_val, end_iter)
      max_step_percent: [ 0, 0.98, 0.25, 5000 ]
      recon_loss: true
      recon_std_rescale: 0.2
      ip_mode: "pixel"


  loggers:
    wandb:
      enable: false
      project: "threestudio"

  loss:
    lambda_sds: 1.
    lambda_orient: [0, 10., 1000., 5000]
    lambda_sparsity: 100.
    lambda_opaque: [10000, 0., 100., 10001]
    lambda_ssim: 50.
    lambda_lpips: 100.
    lambda_z_variance: 0
  optimizer:
    name: AdamW
    args:
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      geometry.encoding:
        lr: 0.01
      geometry.density_network:
        lr: 0.001
      geometry.feature_network:
        lr: 0.001
      background:
        lr: 0.001

trainer:
  max_steps: 35000
  log_every_n_steps: 1
  num_sanity_val_steps: 0
  val_check_interval: 1000
  enable_progress_bar: true
  precision: 16-mixed

checkpoint:
  save_last: true
  save_top_k: 0 #-1
  every_n_train_steps: ${trainer.max_steps}
